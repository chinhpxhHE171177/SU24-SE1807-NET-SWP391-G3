   public int addNew(String roleName, String roleDescription) throws SQLException {
        String sql = "INSERT INTO Roles (RoleName, RoleDescription) VALUES (?, ?); SELECT SCOPE_IDENTITY();";
        try (Connection connection = getConnection(); PreparedStatement pst = connection.prepareStatement(sql)) {
            pst.setString(1, roleName);
            pst.setString(2, roleDescription);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return rs.getInt(1); 
            }
        }
        throw new SQLException("Failed to retrieve RoleID.");
    }



public void addPermission(Permission permission) throws SQLException {
	    String sql = "INSERT INTO Permissions (RoleID, PageName, CanAccess, CanAdd, CanEdit, CanDelete) VALUES (?, ?, ?, ?, ?, ?)";
	    try (Connection conn = getConnection();
	         PreparedStatement ps = conn.prepareStatement(sql)) {
	        ps.setInt(1, permission.getRoleId());
	        ps.setString(2, permission.getPageName());
	        ps.setBoolean(3, permission.isCanAccess());
	        ps.setBoolean(4, permission.isCanAdd());
	        ps.setBoolean(5, permission.isCanEdit());
	        ps.setBoolean(6, permission.isCanDelete());
	        ps.executeUpdate();
	    }
	}

public void add(String pageName, boolean canAccess, boolean canAdd, boolean canEdit, boolean canDelete) {
	    // Query to get all RoleIDs from the Roles table
	    String fetchRolesSql = "SELECT RoleID FROM Roles";

	    // Query to insert a new permission
	    String insertPermissionSql = "INSERT INTO Permissions (RoleID, PageName, CanAccess, CanAdd, CanEdit, CanDelete) VALUES (?, ?, ?, ?, ?, ?)";

	    try (Connection connection = getConnection();
	         PreparedStatement fetchRolesStmt = connection.prepareStatement(fetchRolesSql);
	         PreparedStatement insertPermissionStmt = connection.prepareStatement(insertPermissionSql)) {

	        // Fetch all RoleIDs
	        ResultSet rs = fetchRolesStmt.executeQuery();

	        // Loop through each RoleID and insert a permission
	        while (rs.next()) {
	            int roleId = rs.getInt("RoleID");

	            insertPermissionStmt.setInt(1, roleId);
	            insertPermissionStmt.setString(2, pageName);
	            insertPermissionStmt.setBoolean(3, canAccess);
	            insertPermissionStmt.setBoolean(4, canAdd);
	            insertPermissionStmt.setBoolean(5, canEdit);
	            insertPermissionStmt.setBoolean(6, canDelete);

	            // Execute the insertion for this RoleID
	            insertPermissionStmt.executeUpdate();
	        }

	    } catch (SQLException e) {
	        e.printStackTrace();
	        throw new RuntimeException("Error adding permissions: " + e.getMessage());
	    }
	}